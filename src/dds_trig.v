////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: P.15xf
//  \   \         Application: netgen
//  /   /         Filename: dds_trig.v
// /___/   /\     Timestamp: Tue Mar 19 16:45:30 2013
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -w -sim -ofmt verilog /home/cc/cs150/sp13/class/cs150-ac/proj/MicIn/src/tmp/_cg/dds_trig.ngc /home/cc/cs150/sp13/class/cs150-ac/proj/MicIn/src/tmp/_cg/dds_trig.v 
// Device	: 5vlx110tff1136-1
// Input file	: /home/cc/cs150/sp13/class/cs150-ac/proj/MicIn/src/tmp/_cg/dds_trig.ngc
// Output file	: /home/cc/cs150/sp13/class/cs150-ac/proj/MicIn/src/tmp/_cg/dds_trig.v
// # of Modules	: 1
// Design Name	: dds_trig
// Xilinx        : /opt/Xilinx/14.1/ISE_DS/ISE/
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module dds_trig (
  clk, phase_in, sine, cosine
)/* synthesis syn_black_box syn_noprune=1 */;
  input clk;
  input [15 : 0] phase_in;
  output [15 : 0] sine;
  output [15 : 0] cosine;
  
  // synthesis translate_off
  
  wire \blk00000003/sig000000f8 ;
  wire \blk00000003/sig000000f7 ;
  wire \blk00000003/sig000000f6 ;
  wire \blk00000003/sig000000f5 ;
  wire \blk00000003/sig000000f4 ;
  wire \blk00000003/sig000000f3 ;
  wire \blk00000003/sig000000f2 ;
  wire \blk00000003/sig000000f1 ;
  wire \blk00000003/sig000000f0 ;
  wire \blk00000003/sig000000ef ;
  wire \blk00000003/sig000000ee ;
  wire \blk00000003/sig000000ed ;
  wire \blk00000003/sig000000ec ;
  wire \blk00000003/sig000000eb ;
  wire \blk00000003/sig000000ea ;
  wire \blk00000003/sig000000e9 ;
  wire \blk00000003/sig000000e8 ;
  wire \blk00000003/sig000000e7 ;
  wire \blk00000003/sig000000e6 ;
  wire \blk00000003/sig000000e5 ;
  wire \blk00000003/sig000000e4 ;
  wire \blk00000003/sig000000e3 ;
  wire \blk00000003/sig000000e2 ;
  wire \blk00000003/sig000000e1 ;
  wire \blk00000003/sig000000e0 ;
  wire \blk00000003/sig000000df ;
  wire \blk00000003/sig000000de ;
  wire \blk00000003/sig000000dd ;
  wire \blk00000003/sig000000dc ;
  wire \blk00000003/sig000000db ;
  wire \blk00000003/sig000000da ;
  wire \blk00000003/sig000000d9 ;
  wire \blk00000003/sig000000d8 ;
  wire \blk00000003/sig000000d7 ;
  wire \blk00000003/sig000000d6 ;
  wire \blk00000003/sig000000d5 ;
  wire \blk00000003/sig000000d4 ;
  wire \blk00000003/sig000000d3 ;
  wire \blk00000003/sig000000d2 ;
  wire \blk00000003/sig000000d1 ;
  wire \blk00000003/sig000000d0 ;
  wire \blk00000003/sig000000cf ;
  wire \blk00000003/sig000000ce ;
  wire \blk00000003/sig000000cd ;
  wire \blk00000003/sig000000cc ;
  wire \blk00000003/sig000000cb ;
  wire \blk00000003/sig000000ca ;
  wire \blk00000003/sig000000c9 ;
  wire \blk00000003/sig000000c8 ;
  wire \blk00000003/sig000000c7 ;
  wire \blk00000003/sig000000c6 ;
  wire \blk00000003/sig000000c5 ;
  wire \blk00000003/sig000000c4 ;
  wire \blk00000003/sig000000c3 ;
  wire \blk00000003/sig000000c2 ;
  wire \blk00000003/sig000000c1 ;
  wire \blk00000003/sig000000c0 ;
  wire \blk00000003/sig000000bf ;
  wire \blk00000003/sig000000be ;
  wire \blk00000003/sig000000bd ;
  wire \blk00000003/sig000000bc ;
  wire \blk00000003/sig000000bb ;
  wire \blk00000003/sig000000ba ;
  wire \blk00000003/sig000000b9 ;
  wire \blk00000003/sig000000b8 ;
  wire \blk00000003/sig000000b7 ;
  wire \blk00000003/sig000000b6 ;
  wire \blk00000003/sig000000b5 ;
  wire \blk00000003/sig000000b4 ;
  wire \blk00000003/sig000000b3 ;
  wire \blk00000003/sig000000b2 ;
  wire \blk00000003/sig000000b1 ;
  wire \blk00000003/sig000000b0 ;
  wire \blk00000003/sig000000af ;
  wire \blk00000003/sig000000ae ;
  wire \blk00000003/sig000000ad ;
  wire \blk00000003/sig000000ac ;
  wire \blk00000003/sig000000ab ;
  wire \blk00000003/sig000000aa ;
  wire \blk00000003/sig000000a9 ;
  wire \blk00000003/sig000000a8 ;
  wire \blk00000003/sig000000a7 ;
  wire \blk00000003/sig000000a6 ;
  wire \blk00000003/sig000000a5 ;
  wire \blk00000003/sig000000a4 ;
  wire \blk00000003/sig000000a3 ;
  wire \blk00000003/sig000000a2 ;
  wire \blk00000003/sig000000a1 ;
  wire \blk00000003/sig000000a0 ;
  wire \blk00000003/sig0000009f ;
  wire \blk00000003/sig0000009e ;
  wire \blk00000003/sig0000009d ;
  wire \blk00000003/sig0000009c ;
  wire \blk00000003/sig0000009b ;
  wire \blk00000003/sig0000009a ;
  wire \blk00000003/sig00000099 ;
  wire \blk00000003/sig00000098 ;
  wire \blk00000003/sig00000097 ;
  wire \blk00000003/sig00000096 ;
  wire \blk00000003/sig00000095 ;
  wire \blk00000003/sig00000094 ;
  wire \blk00000003/sig00000093 ;
  wire \blk00000003/sig00000092 ;
  wire \blk00000003/sig00000091 ;
  wire \blk00000003/sig00000090 ;
  wire \blk00000003/sig0000008f ;
  wire \blk00000003/sig0000008e ;
  wire \blk00000003/sig0000008d ;
  wire \blk00000003/sig0000008c ;
  wire \blk00000003/sig0000008b ;
  wire \blk00000003/sig0000008a ;
  wire \blk00000003/sig00000089 ;
  wire \blk00000003/sig00000088 ;
  wire \blk00000003/sig00000087 ;
  wire \blk00000003/sig00000086 ;
  wire \blk00000003/sig00000085 ;
  wire \blk00000003/sig00000084 ;
  wire \blk00000003/sig00000083 ;
  wire \blk00000003/sig00000082 ;
  wire \blk00000003/sig00000081 ;
  wire \blk00000003/sig00000080 ;
  wire \blk00000003/sig0000007f ;
  wire \blk00000003/sig0000007e ;
  wire \blk00000003/sig0000007d ;
  wire \blk00000003/sig0000007c ;
  wire \blk00000003/sig0000007b ;
  wire \blk00000003/sig0000007a ;
  wire \blk00000003/sig00000079 ;
  wire \blk00000003/sig00000078 ;
  wire \blk00000003/sig00000077 ;
  wire \blk00000003/sig00000076 ;
  wire \blk00000003/sig00000075 ;
  wire \blk00000003/sig00000074 ;
  wire \blk00000003/sig00000073 ;
  wire \blk00000003/sig00000072 ;
  wire \blk00000003/sig00000071 ;
  wire \blk00000003/sig00000070 ;
  wire \blk00000003/sig0000006f ;
  wire \blk00000003/sig0000006e ;
  wire \blk00000003/sig0000006d ;
  wire \blk00000003/sig0000006c ;
  wire \blk00000003/sig0000006b ;
  wire \blk00000003/sig0000006a ;
  wire \blk00000003/sig00000069 ;
  wire \blk00000003/sig00000068 ;
  wire \blk00000003/sig00000067 ;
  wire \blk00000003/sig00000066 ;
  wire \blk00000003/sig00000065 ;
  wire \blk00000003/sig00000064 ;
  wire \blk00000003/sig00000063 ;
  wire \blk00000003/sig00000062 ;
  wire \blk00000003/sig00000061 ;
  wire \blk00000003/sig00000060 ;
  wire \blk00000003/sig0000005f ;
  wire \blk00000003/sig0000005e ;
  wire \blk00000003/sig0000005d ;
  wire \blk00000003/sig0000005c ;
  wire \blk00000003/sig0000005b ;
  wire \blk00000003/sig0000005a ;
  wire \blk00000003/sig00000059 ;
  wire \blk00000003/sig00000058 ;
  wire \blk00000003/sig00000057 ;
  wire \blk00000003/sig00000056 ;
  wire \blk00000003/sig00000055 ;
  wire \blk00000003/sig00000054 ;
  wire \blk00000003/sig00000053 ;
  wire \blk00000003/sig00000052 ;
  wire \blk00000003/sig00000051 ;
  wire \blk00000003/sig00000050 ;
  wire \blk00000003/sig0000004f ;
  wire \blk00000003/sig0000004e ;
  wire \blk00000003/sig0000004d ;
  wire \blk00000003/sig0000004c ;
  wire \blk00000003/sig0000004b ;
  wire \blk00000003/sig0000004a ;
  wire \blk00000003/sig00000049 ;
  wire \blk00000003/sig00000048 ;
  wire \blk00000003/sig00000047 ;
  wire \blk00000003/sig00000046 ;
  wire \blk00000003/sig00000045 ;
  wire \blk00000003/sig00000044 ;
  wire \blk00000003/sig00000043 ;
  wire \blk00000003/sig00000042 ;
  wire \blk00000003/sig00000041 ;
  wire \blk00000003/sig00000040 ;
  wire \blk00000003/sig0000003f ;
  wire \blk00000003/sig0000003e ;
  wire \blk00000003/sig0000003d ;
  wire \blk00000003/sig0000003c ;
  wire \blk00000003/sig0000003b ;
  wire \blk00000003/sig0000003a ;
  wire \blk00000003/sig00000039 ;
  wire \blk00000003/sig00000038 ;
  wire \blk00000003/sig00000037 ;
  wire \blk00000003/sig00000036 ;
  wire \blk00000003/sig00000035 ;
  wire \blk00000003/sig00000034 ;
  wire \blk00000003/sig00000033 ;
  wire \blk00000003/sig00000032 ;
  wire NLW_blk00000001_P_UNCONNECTED;
  wire NLW_blk00000002_G_UNCONNECTED;
  wire \NLW_blk00000003/blk0000009c_ADDRA<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRA<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRA<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRA<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRB<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRB<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRB<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_ADDRB<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIB<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIPB<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DIPB<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DOPA<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DOPA<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DOPB<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000009c_DOPB<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000008_CARRYOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT<0>_UNCONNECTED ;
  wire [15 : 0] phase_in_0;
  wire [15 : 0] cosine_1;
  wire [15 : 0] sine_2;
  assign
    phase_in_0[15] = phase_in[15],
    phase_in_0[14] = phase_in[14],
    phase_in_0[13] = phase_in[13],
    phase_in_0[12] = phase_in[12],
    phase_in_0[11] = phase_in[11],
    phase_in_0[10] = phase_in[10],
    phase_in_0[9] = phase_in[9],
    phase_in_0[8] = phase_in[8],
    phase_in_0[7] = phase_in[7],
    phase_in_0[6] = phase_in[6],
    phase_in_0[5] = phase_in[5],
    phase_in_0[4] = phase_in[4],
    phase_in_0[3] = phase_in[3],
    phase_in_0[2] = phase_in[2],
    phase_in_0[1] = phase_in[1],
    phase_in_0[0] = phase_in[0],
    sine[15] = sine_2[15],
    sine[14] = sine_2[14],
    sine[13] = sine_2[13],
    sine[12] = sine_2[12],
    sine[11] = sine_2[11],
    sine[10] = sine_2[10],
    sine[9] = sine_2[9],
    sine[8] = sine_2[8],
    sine[7] = sine_2[7],
    sine[6] = sine_2[6],
    sine[5] = sine_2[5],
    sine[4] = sine_2[4],
    sine[3] = sine_2[3],
    sine[2] = sine_2[2],
    sine[1] = sine_2[1],
    sine[0] = sine_2[0],
    cosine[15] = cosine_1[15],
    cosine[14] = cosine_1[14],
    cosine[13] = cosine_1[13],
    cosine[12] = cosine_1[12],
    cosine[11] = cosine_1[11],
    cosine[10] = cosine_1[10],
    cosine[9] = cosine_1[9],
    cosine[8] = cosine_1[8],
    cosine[7] = cosine_1[7],
    cosine[6] = cosine_1[6],
    cosine[5] = cosine_1[5],
    cosine[4] = cosine_1[4],
    cosine[3] = cosine_1[3],
    cosine[2] = cosine_1[2],
    cosine[1] = cosine_1[1],
    cosine[0] = cosine_1[0];
  VCC   blk00000001 (
    .P(NLW_blk00000001_P_UNCONNECTED)
  );
  GND   blk00000002 (
    .G(NLW_blk00000002_G_UNCONNECTED)
  );
  RAMB18 #(
    .INIT_00 ( 256'h061605B1054D04E80484041F03BB035602F2028D022901C4016000FB00970032 ),
    .INIT_01 ( 256'h0C5A0BF60B910B2D0AC90A650A01099D093808D40870080B07A7074306DE067A ),
    .INIT_02 ( 256'h1296123311CF116B110810A410410FDD0F790F150EB10E4D0DEA0D860D220CBE ),
    .INIT_03 ( 256'h18C718641802179F173C16D91676161315B0154D14EA1487142413C0135D12F9 ),
    .INIT_04 ( 256'h1EE91E871E251DC41D621D001C9E1C3C1BDA1B781B161AB31A5119EF198C192A ),
    .INIT_05 ( 256'h24F72497243723D62376231522B4225421F32192213120D0206E200D1FAC1F4A ),
    .INIT_06 ( 256'h2AEF2A902A3229D32974291428B5285627F62797273726D72678261825B82558 ),
    .INIT_07 ( 256'h30CD307030122FB52F582EFA2E9D2E3F2DE12D842D252CC72C692C0B2BAC2B4E ),
    .INIT_08 ( 256'h368C363135D6357A351F34C33468340C33B0335432F8329C323F31E331863129 ),
    .INIT_09 ( 256'h3C293BD13B783B1F3AC53A6C3A1239B9395F390538AB385137F7379C374136E7 ),
    .INIT_0A ( 256'h41A2414C40F5409E40473FF03F993F423EEB3E933E3B3DE33D8B3D333CDB3C82 ),
    .INIT_0B ( 256'h46F2469E464A45F645A2454E44F944A4444F43FA43A5434F42FA42A4424E41F8 ),
    .INIT_0C ( 256'h4C164BC54B744B234AD14A804A2E49DC498A493748E54892483F47EC47994746 ),
    .INIT_0D ( 256'h510C50BE507050214FD34F844F354EE64E974E484DF84DA84D584D084CB84C67 ),
    .INIT_0E ( 256'h55CF5584553954EE54A35458540C53C05374532752DB528E524151F451A75159 ),
    .INIT_0F ( 256'h5A5D5A1659CF5987593F58F758AE5866581D57D4578B574156F856AE5664561A ),
    .INIT_10 ( 256'h5EB45E705E2D5DE85DA45D5F5D1A5CD55C905C4A5C055BBF5B785B325AEB5AA5 ),
    .INIT_11 ( 256'h62D162916250621061CF618E614D610B60CA6088604660035FC15F7E5F3B5EF8 ),
    .INIT_12 ( 256'h66B06674663765FB65BE65816543650664C8648A644C640D63CE638F63506310 ),
    .INIT_13 ( 256'h6A506A1869DF69A7696E693568FC68C26888684E681367D9679E6763672766EC ),
    .INIT_14 ( 256'h6DAE6D7B6D466D126CDD6CA86C736C3D6C086BD16B9B6B656B2E6AF76ABF6A88 ),
    .INIT_15 ( 256'h70C9709A706A703970096FD86FA76F766F446F136EE16EAE6E7C6E496E166DE2 ),
    .INIT_16 ( 256'h739F73737348731C72F072C47297726A723D720F71E271B371857157712870F9 ),
    .INIT_17 ( 256'h762D760675DF75B7759075687540751774EF74C6749C74737449741F73F473CA ),
    .INIT_18 ( 256'h7872784F782D780A77E777C477A0777C77587734770F76EA76C5769F76797653 ),
    .INIT_19 ( 256'h7A6C7A4F7A317A1379F579D679B77998797879597938791878F778D678B57894 ),
    .INIT_1A ( 256'h7C1C7C037BEA7BD17BB77B9D7B837B687B4E7B337B177AFB7ADF7AC37AA77A8A ),
    .INIT_1B ( 256'h7D7F7D6B7D567D427D2D7D187D037CED7CD77CC07CAA7C937C7C7C647C4C7C34 ),
    .INIT_1C ( 256'h7E947E857E767E667E567E467E357E247E137E017DF07DDE7DCB7DB87DA57D92 ),
    .INIT_1D ( 256'h7F5B7F517F477F3C7F317F257F1A7F0E7F017EF57EE87EDB7ECD7EBF7EB17EA3 ),
    .INIT_1E ( 256'h7FD47FCF7FC97FC37FBD7FB77FB07FA97FA17F9A7F927F897F817F787F6F7F65 ),
    .INIT_1F ( 256'h7FFE7FFE7FFD7FFC7FFB7FF97FF77FF57FF37FF07FED7FEA7FE67FE27FDE7FD9 ),
    .INIT_20 ( 256'hF9EAFA4FFAB3FB18FB7CFBE1FC45FCAAFD0EFD73FDD7FE3CFEA0FF05FF69FFCE ),
    .INIT_21 ( 256'hF3A6F40AF46FF4D3F537F59BF5FFF663F6C8F72CF790F7F5F859F8BDF922F986 ),
    .INIT_22 ( 256'hED6AEDCDEE31EE95EEF8EF5CEFBFF023F087F0EBF14FF1B3F216F27AF2DEF342 ),
    .INIT_23 ( 256'hE739E79CE7FEE861E8C4E927E98AE9EDEA50EAB3EB16EB79EBDCEC40ECA3ED07 ),
    .INIT_24 ( 256'hE117E179E1DBE23CE29EE300E362E3C4E426E488E4EAE54DE5AFE611E674E6D6 ),
    .INIT_25 ( 256'hDB09DB69DBC9DC2ADC8ADCEBDD4CDDACDE0DDE6EDECFDF30DF92DFF3E054E0B6 ),
    .INIT_26 ( 256'hD511D570D5CED62DD68CD6ECD74BD7AAD80AD869D8C9D929D988D9E8DA48DAA8 ),
    .INIT_27 ( 256'hCF33CF90CFEED04BD0A8D106D163D1C1D21FD27CD2DBD339D397D3F5D454D4B2 ),
    .INIT_28 ( 256'hC974C9CFCA2ACA86CAE1CB3DCB98CBF4CC50CCACCD08CD64CDC1CE1DCE7ACED7 ),
    .INIT_29 ( 256'hC3D7C42FC488C4E1C53BC594C5EEC647C6A1C6FBC755C7AFC809C864C8BFC919 ),
    .INIT_2A ( 256'hBE5EBEB4BF0BBF62BFB9C010C067C0BEC115C16DC1C5C21DC275C2CDC325C37E ),
    .INIT_2B ( 256'hB90EB962B9B6BA0ABA5EBAB2BB07BB5CBBB1BC06BC5BBCB1BD06BD5CBDB2BE08 ),
    .INIT_2C ( 256'hB3EAB43BB48CB4DDB52FB580B5D2B624B676B6C9B71BB76EB7C1B814B867B8BA ),
    .INIT_2D ( 256'hAEF4AF42AF90AFDFB02DB07CB0CBB11AB169B1B8B208B258B2A8B2F8B348B399 ),
    .INIT_2E ( 256'hAA31AA7CAAC7AB12AB5DABA8ABF4AC40AC8CACD9AD25AD72ADBFAE0CAE59AEA7 ),
    .INIT_2F ( 256'hA5A3A5EAA631A679A6C1A709A752A79AA7E3A82CA875A8BFA908A952A99CA9E6 ),
    .INIT_30 ( 256'hA14CA190A1D3A218A25CA2A1A2E6A32BA370A3B6A3FBA441A488A4CEA515A55B ),
    .INIT_31 ( 256'h9D2F9D6F9DB09DF09E319E729EB39EF59F369F789FBA9FFDA03FA082A0C5A108 ),
    .INIT_32 ( 256'h9950998C99C99A059A429A7F9ABD9AFA9B389B769BB49BF39C329C719CB09CF0 ),
    .INIT_33 ( 256'h95B095E896219659969296CB9704973E977897B297ED98279862989D98D99914 ),
    .INIT_34 ( 256'h9252928592BA92EE93239358938D93C393F8942F9465949B94D2950995419578 ),
    .INIT_35 ( 256'h8F378F668F968FC78FF790289059908A90BC90ED911F9152918491B791EA921E ),
    .INIT_36 ( 256'h8C618C8D8CB88CE48D108D3C8D698D968DC38DF18E1E8E4D8E7B8EA98ED88F07 ),
    .INIT_37 ( 256'h89D389FA8A218A498A708A988AC08AE98B118B3A8B648B8D8BB78BE18C0C8C36 ),
    .INIT_38 ( 256'h878E87B187D387F68819883C8860888488A888CC88F18916893B8961898789AD ),
    .INIT_39 ( 256'h859485B185CF85ED860B862A86498668868886A786C886E88709872A874B876C ),
    .INIT_3A ( 256'h83E483FD8416842F84498463847D849884B284CD84E985058521853D85598576 ),
    .INIT_3B ( 256'h8281829582AA82BE82D382E882FD8313832983408356836D8384839C83B483CC ),
    .INIT_3C ( 256'h816C817B818A819A81AA81BA81CB81DC81ED81FF8210822282358248825B826E ),
    .INIT_3D ( 256'h80A580AF80B980C480CF80DB80E680F280FF810B8118812581338141814F815D ),
    .INIT_3E ( 256'h802C80318037803D8043804980508057805F8066806E8077807F80888091809B ),
    .INIT_3F ( 256'h8002800280038004800580078009800B800D801080138016801A801E80228027 ),
    .INIT_A ( 18'h00000 ),
    .INIT_B ( 18'h00000 ),
    .WRITE_MODE_A ( "WRITE_FIRST" ),
    .WRITE_MODE_B ( "WRITE_FIRST" ),
    .DOA_REG ( 1 ),
    .DOB_REG ( 1 ),
    .READ_WIDTH_A ( 18 ),
    .READ_WIDTH_B ( 18 ),
    .WRITE_WIDTH_A ( 18 ),
    .WRITE_WIDTH_B ( 0 ),
    .INIT_FILE ( "NONE" ),
    .INITP_00 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_01 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_02 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_03 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_04 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_05 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_06 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_07 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .SIM_COLLISION_CHECK ( "ALL" ),
    .SRVAL_A ( 18'h00000 ),
    .SRVAL_B ( 18'h00000 ))
  \blk00000003/blk0000009c  (
    .CLKA(clk),
    .CLKB(clk),
    .ENA(\blk00000003/sig00000033 ),
    .ENB(\blk00000003/sig00000033 ),
    .REGCEA(\blk00000003/sig00000033 ),
    .REGCEB(\blk00000003/sig00000033 ),
    .SSRA(\blk00000003/sig00000032 ),
    .SSRB(\blk00000003/sig00000032 ),
    .ADDRA({\blk00000003/sig000000c6 , \blk00000003/sig000000c8 , \blk00000003/sig000000ca , \blk00000003/sig000000cc , \blk00000003/sig000000ce , 
\blk00000003/sig000000d0 , \blk00000003/sig000000d2 , \blk00000003/sig000000d4 , \blk00000003/sig000000d6 , \blk00000003/sig000000d8 , 
\NLW_blk00000003/blk0000009c_ADDRA<3>_UNCONNECTED , \NLW_blk00000003/blk0000009c_ADDRA<2>_UNCONNECTED , 
\NLW_blk00000003/blk0000009c_ADDRA<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_ADDRA<0>_UNCONNECTED }),
    .ADDRB({\blk00000003/sig000000b3 , \blk00000003/sig000000b5 , \blk00000003/sig000000b7 , \blk00000003/sig000000b9 , \blk00000003/sig000000bb , 
\blk00000003/sig000000bd , \blk00000003/sig000000bf , \blk00000003/sig000000c1 , \blk00000003/sig000000c3 , \blk00000003/sig000000c5 , 
\NLW_blk00000003/blk0000009c_ADDRB<3>_UNCONNECTED , \NLW_blk00000003/blk0000009c_ADDRB<2>_UNCONNECTED , 
\NLW_blk00000003/blk0000009c_ADDRB<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_ADDRB<0>_UNCONNECTED }),
    .DIA({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 }),
    .DIB({\NLW_blk00000003/blk0000009c_DIB<15>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<14>_UNCONNECTED , 
\NLW_blk00000003/blk0000009c_DIB<13>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<12>_UNCONNECTED , 
\NLW_blk00000003/blk0000009c_DIB<11>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<10>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<9>_UNCONNECTED 
, \NLW_blk00000003/blk0000009c_DIB<8>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<7>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<6>_UNCONNECTED 
, \NLW_blk00000003/blk0000009c_DIB<5>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<4>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<3>_UNCONNECTED 
, \NLW_blk00000003/blk0000009c_DIB<2>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIB<0>_UNCONNECTED 
}),
    .DIPA({\blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .DIPB({\NLW_blk00000003/blk0000009c_DIPB<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DIPB<0>_UNCONNECTED }),
    .DOA({\blk00000003/sig000000e9 , \blk00000003/sig000000ea , \blk00000003/sig000000eb , \blk00000003/sig000000ec , \blk00000003/sig000000ed , 
\blk00000003/sig000000ee , \blk00000003/sig000000ef , \blk00000003/sig000000f0 , \blk00000003/sig000000f1 , \blk00000003/sig000000f2 , 
\blk00000003/sig000000f3 , \blk00000003/sig000000f4 , \blk00000003/sig000000f5 , \blk00000003/sig000000f6 , \blk00000003/sig000000f7 , 
\blk00000003/sig000000f8 }),
    .DOB({\blk00000003/sig000000d9 , \blk00000003/sig000000da , \blk00000003/sig000000db , \blk00000003/sig000000dc , \blk00000003/sig000000dd , 
\blk00000003/sig000000de , \blk00000003/sig000000df , \blk00000003/sig000000e0 , \blk00000003/sig000000e1 , \blk00000003/sig000000e2 , 
\blk00000003/sig000000e3 , \blk00000003/sig000000e4 , \blk00000003/sig000000e5 , \blk00000003/sig000000e6 , \blk00000003/sig000000e7 , 
\blk00000003/sig000000e8 }),
    .DOPA({\NLW_blk00000003/blk0000009c_DOPA<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DOPA<0>_UNCONNECTED }),
    .DOPB({\NLW_blk00000003/blk0000009c_DOPB<1>_UNCONNECTED , \NLW_blk00000003/blk0000009c_DOPB<0>_UNCONNECTED }),
    .WEA({\blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .WEB({\blk00000003/sig00000032 , \blk00000003/sig00000032 })
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk0000009b  (
    .I0(phase_in_0[15]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000b2 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk0000009a  (
    .I0(phase_in_0[12]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000c9 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000099  (
    .I0(phase_in_0[12]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000b6 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk00000098  (
    .I0(phase_in_0[13]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000c7 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000097  (
    .I0(phase_in_0[13]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000b4 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk00000096  (
    .I0(phase_in_0[9]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000cf )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000095  (
    .I0(phase_in_0[9]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000bc )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk00000094  (
    .I0(phase_in_0[11]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000cb )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000093  (
    .I0(phase_in_0[11]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000b8 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk00000092  (
    .I0(phase_in_0[10]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000cd )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000091  (
    .I0(phase_in_0[10]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000ba )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk00000090  (
    .I0(phase_in_0[6]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000d5 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk0000008f  (
    .I0(phase_in_0[6]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000c2 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk0000008e  (
    .I0(phase_in_0[8]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000d1 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk0000008d  (
    .I0(phase_in_0[8]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000be )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk0000008c  (
    .I0(phase_in_0[7]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000d3 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk0000008b  (
    .I0(phase_in_0[7]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000c0 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000003/blk0000008a  (
    .I0(phase_in_0[5]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000d7 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000003/blk00000089  (
    .I0(phase_in_0[5]),
    .I1(phase_in_0[14]),
    .O(\blk00000003/sig000000c4 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000088  (
    .C(clk),
    .D(\blk00000003/sig000000f8 ),
    .Q(\blk00000003/sig00000043 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000087  (
    .C(clk),
    .D(\blk00000003/sig000000f7 ),
    .Q(\blk00000003/sig00000042 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000086  (
    .C(clk),
    .D(\blk00000003/sig000000f6 ),
    .Q(\blk00000003/sig00000041 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000085  (
    .C(clk),
    .D(\blk00000003/sig000000f5 ),
    .Q(\blk00000003/sig00000040 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000084  (
    .C(clk),
    .D(\blk00000003/sig000000f4 ),
    .Q(\blk00000003/sig0000003f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000083  (
    .C(clk),
    .D(\blk00000003/sig000000f3 ),
    .Q(\blk00000003/sig0000003e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000082  (
    .C(clk),
    .D(\blk00000003/sig000000f2 ),
    .Q(\blk00000003/sig0000003d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000081  (
    .C(clk),
    .D(\blk00000003/sig000000f1 ),
    .Q(\blk00000003/sig0000003c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000080  (
    .C(clk),
    .D(\blk00000003/sig000000f0 ),
    .Q(\blk00000003/sig0000003b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007f  (
    .C(clk),
    .D(\blk00000003/sig000000ef ),
    .Q(\blk00000003/sig0000003a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007e  (
    .C(clk),
    .D(\blk00000003/sig000000ee ),
    .Q(\blk00000003/sig00000039 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007d  (
    .C(clk),
    .D(\blk00000003/sig000000ed ),
    .Q(\blk00000003/sig00000038 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007c  (
    .C(clk),
    .D(\blk00000003/sig000000ec ),
    .Q(\blk00000003/sig00000037 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007b  (
    .C(clk),
    .D(\blk00000003/sig000000eb ),
    .Q(\blk00000003/sig00000036 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000007a  (
    .C(clk),
    .D(\blk00000003/sig000000ea ),
    .Q(\blk00000003/sig00000035 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000079  (
    .C(clk),
    .D(\blk00000003/sig000000e9 ),
    .Q(\blk00000003/sig00000034 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000078  (
    .C(clk),
    .D(\blk00000003/sig000000e8 ),
    .Q(\blk00000003/sig00000076 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000077  (
    .C(clk),
    .D(\blk00000003/sig000000e7 ),
    .Q(\blk00000003/sig00000075 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000076  (
    .C(clk),
    .D(\blk00000003/sig000000e6 ),
    .Q(\blk00000003/sig00000074 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000075  (
    .C(clk),
    .D(\blk00000003/sig000000e5 ),
    .Q(\blk00000003/sig00000073 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000074  (
    .C(clk),
    .D(\blk00000003/sig000000e4 ),
    .Q(\blk00000003/sig00000072 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000073  (
    .C(clk),
    .D(\blk00000003/sig000000e3 ),
    .Q(\blk00000003/sig00000071 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000072  (
    .C(clk),
    .D(\blk00000003/sig000000e2 ),
    .Q(\blk00000003/sig00000070 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000071  (
    .C(clk),
    .D(\blk00000003/sig000000e1 ),
    .Q(\blk00000003/sig0000006f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000070  (
    .C(clk),
    .D(\blk00000003/sig000000e0 ),
    .Q(\blk00000003/sig0000006e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006f  (
    .C(clk),
    .D(\blk00000003/sig000000df ),
    .Q(\blk00000003/sig0000006d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006e  (
    .C(clk),
    .D(\blk00000003/sig000000de ),
    .Q(\blk00000003/sig0000006c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006d  (
    .C(clk),
    .D(\blk00000003/sig000000dd ),
    .Q(\blk00000003/sig0000006b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006c  (
    .C(clk),
    .D(\blk00000003/sig000000dc ),
    .Q(\blk00000003/sig0000006a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006b  (
    .C(clk),
    .D(\blk00000003/sig000000db ),
    .Q(\blk00000003/sig00000069 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006a  (
    .C(clk),
    .D(\blk00000003/sig000000da ),
    .Q(\blk00000003/sig00000068 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000069  (
    .C(clk),
    .D(\blk00000003/sig000000d9 ),
    .Q(\blk00000003/sig00000067 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000068  (
    .C(clk),
    .D(\blk00000003/sig000000d7 ),
    .Q(\blk00000003/sig000000d8 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000067  (
    .C(clk),
    .D(\blk00000003/sig000000d5 ),
    .Q(\blk00000003/sig000000d6 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000066  (
    .C(clk),
    .D(\blk00000003/sig000000d3 ),
    .Q(\blk00000003/sig000000d4 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000065  (
    .C(clk),
    .D(\blk00000003/sig000000d1 ),
    .Q(\blk00000003/sig000000d2 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000064  (
    .C(clk),
    .D(\blk00000003/sig000000cf ),
    .Q(\blk00000003/sig000000d0 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000063  (
    .C(clk),
    .D(\blk00000003/sig000000cd ),
    .Q(\blk00000003/sig000000ce )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000062  (
    .C(clk),
    .D(\blk00000003/sig000000cb ),
    .Q(\blk00000003/sig000000cc )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000061  (
    .C(clk),
    .D(\blk00000003/sig000000c9 ),
    .Q(\blk00000003/sig000000ca )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000060  (
    .C(clk),
    .D(\blk00000003/sig000000c7 ),
    .Q(\blk00000003/sig000000c8 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005f  (
    .C(clk),
    .D(phase_in_0[15]),
    .Q(\blk00000003/sig000000c6 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005e  (
    .C(clk),
    .D(\blk00000003/sig000000c4 ),
    .Q(\blk00000003/sig000000c5 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005d  (
    .C(clk),
    .D(\blk00000003/sig000000c2 ),
    .Q(\blk00000003/sig000000c3 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005c  (
    .C(clk),
    .D(\blk00000003/sig000000c0 ),
    .Q(\blk00000003/sig000000c1 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005b  (
    .C(clk),
    .D(\blk00000003/sig000000be ),
    .Q(\blk00000003/sig000000bf )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005a  (
    .C(clk),
    .D(\blk00000003/sig000000bc ),
    .Q(\blk00000003/sig000000bd )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000059  (
    .C(clk),
    .D(\blk00000003/sig000000ba ),
    .Q(\blk00000003/sig000000bb )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000058  (
    .C(clk),
    .D(\blk00000003/sig000000b8 ),
    .Q(\blk00000003/sig000000b9 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000057  (
    .C(clk),
    .D(\blk00000003/sig000000b6 ),
    .Q(\blk00000003/sig000000b7 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000056  (
    .C(clk),
    .D(\blk00000003/sig000000b4 ),
    .Q(\blk00000003/sig000000b5 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000055  (
    .C(clk),
    .D(\blk00000003/sig000000b2 ),
    .Q(\blk00000003/sig000000b3 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000054  (
    .C(clk),
    .D(\blk00000003/sig00000099 ),
    .Q(\blk00000003/sig00000055 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000053  (
    .C(clk),
    .D(\blk00000003/sig00000098 ),
    .Q(\blk00000003/sig00000054 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000052  (
    .C(clk),
    .D(\blk00000003/sig00000097 ),
    .Q(\blk00000003/sig00000053 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000051  (
    .C(clk),
    .D(\blk00000003/sig00000096 ),
    .Q(\blk00000003/sig00000052 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000050  (
    .C(clk),
    .D(\blk00000003/sig00000095 ),
    .Q(\blk00000003/sig00000051 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004f  (
    .C(clk),
    .D(\blk00000003/sig00000094 ),
    .Q(\blk00000003/sig00000050 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004e  (
    .C(clk),
    .D(\blk00000003/sig00000093 ),
    .Q(\blk00000003/sig0000004f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004d  (
    .C(clk),
    .D(\blk00000003/sig00000092 ),
    .Q(\blk00000003/sig0000004e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004c  (
    .C(clk),
    .D(\blk00000003/sig00000091 ),
    .Q(\blk00000003/sig0000004d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004b  (
    .C(clk),
    .D(\blk00000003/sig00000090 ),
    .Q(\blk00000003/sig0000004c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004a  (
    .C(clk),
    .D(\blk00000003/sig0000008f ),
    .Q(\blk00000003/sig0000004b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000049  (
    .C(clk),
    .D(\blk00000003/sig0000008e ),
    .Q(\blk00000003/sig0000004a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000048  (
    .C(clk),
    .D(\blk00000003/sig0000008d ),
    .Q(\blk00000003/sig00000049 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000047  (
    .C(clk),
    .D(\blk00000003/sig0000008c ),
    .Q(\blk00000003/sig00000048 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000046  (
    .C(clk),
    .D(\blk00000003/sig0000008b ),
    .Q(\blk00000003/sig00000047 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000045  (
    .C(clk),
    .D(\blk00000003/sig0000008a ),
    .Q(\blk00000003/sig00000046 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000044  (
    .C(clk),
    .D(\blk00000003/sig00000089 ),
    .Q(\blk00000003/sig00000045 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000043  (
    .C(clk),
    .D(\blk00000003/sig00000088 ),
    .Q(\blk00000003/sig00000044 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000042  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000b1 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000041  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000b0 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000040  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000af )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003f  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000ae )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003e  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000ad )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003d  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000ac )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003c  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000ab )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003b  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000aa )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003a  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a9 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000039  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a8 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000038  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a7 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000037  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a6 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000036  (
    .C(clk),
    .D(\blk00000003/sig00000033 ),
    .Q(\blk00000003/sig00000087 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000035  (
    .C(clk),
    .D(\blk00000003/sig00000043 ),
    .Q(\blk00000003/sig00000086 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000034  (
    .C(clk),
    .D(\blk00000003/sig00000042 ),
    .Q(\blk00000003/sig00000085 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000033  (
    .C(clk),
    .D(\blk00000003/sig00000041 ),
    .Q(\blk00000003/sig00000084 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000032  (
    .C(clk),
    .D(\blk00000003/sig00000040 ),
    .Q(\blk00000003/sig00000083 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000031  (
    .C(clk),
    .D(\blk00000003/sig0000003f ),
    .Q(\blk00000003/sig00000082 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000030  (
    .C(clk),
    .D(\blk00000003/sig0000003e ),
    .Q(\blk00000003/sig00000081 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002f  (
    .C(clk),
    .D(\blk00000003/sig0000003d ),
    .Q(\blk00000003/sig00000080 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002e  (
    .C(clk),
    .D(\blk00000003/sig0000003c ),
    .Q(\blk00000003/sig0000007f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002d  (
    .C(clk),
    .D(\blk00000003/sig0000003b ),
    .Q(\blk00000003/sig0000007e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002c  (
    .C(clk),
    .D(\blk00000003/sig0000003a ),
    .Q(\blk00000003/sig0000007d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002b  (
    .C(clk),
    .D(\blk00000003/sig00000039 ),
    .Q(\blk00000003/sig0000007c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002a  (
    .C(clk),
    .D(\blk00000003/sig00000038 ),
    .Q(\blk00000003/sig0000007b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000029  (
    .C(clk),
    .D(\blk00000003/sig00000037 ),
    .Q(\blk00000003/sig0000007a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000028  (
    .C(clk),
    .D(\blk00000003/sig00000036 ),
    .Q(\blk00000003/sig00000079 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000027  (
    .C(clk),
    .D(\blk00000003/sig00000035 ),
    .Q(\blk00000003/sig00000078 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000026  (
    .C(clk),
    .D(\blk00000003/sig00000034 ),
    .Q(\blk00000003/sig00000077 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000025  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a5 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000024  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a4 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000023  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a3 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000022  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a2 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000021  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a1 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000020  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig000000a0 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001f  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001e  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001d  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001c  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001b  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001a  (
    .C(clk),
    .D(\blk00000003/sig00000032 ),
    .Q(\blk00000003/sig0000009a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000019  (
    .C(clk),
    .D(\blk00000003/sig00000033 ),
    .Q(\blk00000003/sig00000066 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000018  (
    .C(clk),
    .D(\blk00000003/sig00000076 ),
    .Q(\blk00000003/sig00000065 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000017  (
    .C(clk),
    .D(\blk00000003/sig00000075 ),
    .Q(\blk00000003/sig00000064 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000016  (
    .C(clk),
    .D(\blk00000003/sig00000074 ),
    .Q(\blk00000003/sig00000063 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000015  (
    .C(clk),
    .D(\blk00000003/sig00000073 ),
    .Q(\blk00000003/sig00000062 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000014  (
    .C(clk),
    .D(\blk00000003/sig00000072 ),
    .Q(\blk00000003/sig00000061 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000013  (
    .C(clk),
    .D(\blk00000003/sig00000071 ),
    .Q(\blk00000003/sig00000060 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000012  (
    .C(clk),
    .D(\blk00000003/sig00000070 ),
    .Q(\blk00000003/sig0000005f )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000011  (
    .C(clk),
    .D(\blk00000003/sig0000006f ),
    .Q(\blk00000003/sig0000005e )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000010  (
    .C(clk),
    .D(\blk00000003/sig0000006e ),
    .Q(\blk00000003/sig0000005d )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000f  (
    .C(clk),
    .D(\blk00000003/sig0000006d ),
    .Q(\blk00000003/sig0000005c )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000e  (
    .C(clk),
    .D(\blk00000003/sig0000006c ),
    .Q(\blk00000003/sig0000005b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000d  (
    .C(clk),
    .D(\blk00000003/sig0000006b ),
    .Q(\blk00000003/sig0000005a )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000c  (
    .C(clk),
    .D(\blk00000003/sig0000006a ),
    .Q(\blk00000003/sig00000059 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000b  (
    .C(clk),
    .D(\blk00000003/sig00000069 ),
    .Q(\blk00000003/sig00000058 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000a  (
    .C(clk),
    .D(\blk00000003/sig00000068 ),
    .Q(\blk00000003/sig00000057 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000009  (
    .C(clk),
    .D(\blk00000003/sig00000067 ),
    .Q(\blk00000003/sig00000056 )
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 1 ),
    .BREG ( 1 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 1 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 1 ),
    .MASK ( 48'h3FFFFFFFFFFF ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ))
  \blk00000003/blk00000008  (
    .CARRYIN(\blk00000003/sig00000032 ),
    .CEA1(\blk00000003/sig00000032 ),
    .CEA2(\blk00000003/sig00000033 ),
    .CEB1(\blk00000003/sig00000032 ),
    .CEB2(\blk00000003/sig00000033 ),
    .CEC(\blk00000003/sig00000033 ),
    .CECTRL(\blk00000003/sig00000032 ),
    .CEP(\blk00000003/sig00000033 ),
    .CEM(\blk00000003/sig00000033 ),
    .CECARRYIN(\blk00000003/sig00000033 ),
    .CEMULTCARRYIN(\blk00000003/sig00000032 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000032 ),
    .RSTB(\blk00000003/sig00000032 ),
    .RSTC(\blk00000003/sig00000032 ),
    .RSTCTRL(\blk00000003/sig00000032 ),
    .RSTP(\blk00000003/sig00000032 ),
    .RSTM(\blk00000003/sig00000032 ),
    .RSTALLCARRYIN(\blk00000003/sig00000032 ),
    .CEALUMODE(\blk00000003/sig00000033 ),
    .RSTALUMODE(\blk00000003/sig00000032 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000008_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000008_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000008_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000008_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000032 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000008_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000032 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000008_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , phase_in_0[4], phase_in_0[3], phase_in_0[2], phase_in_0[1], 
phase_in_0[0], \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .PCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .B({\blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , 
\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 }),
    .C({\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , 
\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , 
\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , 
\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , 
\blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .CARRYINSEL({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .OPMODE({\blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , 
\blk00000003/sig00000032 , \blk00000003/sig00000033 }),
    .BCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ALUMODE({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .PCOUT({\NLW_blk00000003/blk00000008_PCOUT<47>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<45>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<44>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<43>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<41>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<39>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<38>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<37>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<35>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<33>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<32>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<31>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_PCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000008_PCOUT<0>_UNCONNECTED }),
    .P({\NLW_blk00000003/blk00000008_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<42>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<41>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<39>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<38>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<37>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<36>_UNCONNECTED , \blk00000003/sig00000088 , \blk00000003/sig00000089 , \blk00000003/sig0000008a , 
\blk00000003/sig0000008b , \blk00000003/sig0000008c , \blk00000003/sig0000008d , \blk00000003/sig0000008e , \blk00000003/sig0000008f , 
\blk00000003/sig00000090 , \blk00000003/sig00000091 , \blk00000003/sig00000092 , \blk00000003/sig00000093 , \blk00000003/sig00000094 , 
\blk00000003/sig00000095 , \blk00000003/sig00000096 , \blk00000003/sig00000097 , \blk00000003/sig00000098 , \blk00000003/sig00000099 , 
\NLW_blk00000003/blk00000008_P<17>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<16>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<15>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<14>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<13>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<11>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<10>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<9>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<8>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<7>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<5>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<4>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<3>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_P<2>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<1>_UNCONNECTED , \NLW_blk00000003/blk00000008_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003/blk00000008_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000008_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ACOUT({\NLW_blk00000003/blk00000008_ACOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_ACOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000008_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000008_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000008_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000008_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000008_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 1 ),
    .BREG ( 1 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 1 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 1 ),
    .MASK ( 48'h3FFFFFFFFFFF ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ))
  \blk00000003/blk00000007  (
    .CARRYIN(\blk00000003/sig00000032 ),
    .CEA1(\blk00000003/sig00000032 ),
    .CEA2(\blk00000003/sig00000033 ),
    .CEB1(\blk00000003/sig00000032 ),
    .CEB2(\blk00000003/sig00000033 ),
    .CEC(\blk00000003/sig00000033 ),
    .CECTRL(\blk00000003/sig00000032 ),
    .CEP(\blk00000003/sig00000033 ),
    .CEM(\blk00000003/sig00000033 ),
    .CECARRYIN(\blk00000003/sig00000033 ),
    .CEMULTCARRYIN(\blk00000003/sig00000032 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000032 ),
    .RSTB(\blk00000003/sig00000032 ),
    .RSTC(\blk00000003/sig00000032 ),
    .RSTCTRL(\blk00000003/sig00000032 ),
    .RSTP(\blk00000003/sig00000032 ),
    .RSTM(\blk00000003/sig00000032 ),
    .RSTALLCARRYIN(\blk00000003/sig00000032 ),
    .CEALUMODE(\blk00000003/sig00000033 ),
    .RSTALUMODE(\blk00000003/sig00000032 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000007_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000007_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000007_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000007_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000032 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000007_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000032 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000007_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , 
\blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , 
\blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000067 , \blk00000003/sig00000068 , \blk00000003/sig00000069 , 
\blk00000003/sig0000006a , \blk00000003/sig0000006b , \blk00000003/sig0000006c , \blk00000003/sig0000006d , \blk00000003/sig0000006e , 
\blk00000003/sig0000006f , \blk00000003/sig00000070 , \blk00000003/sig00000071 , \blk00000003/sig00000072 , \blk00000003/sig00000073 , 
\blk00000003/sig00000074 , \blk00000003/sig00000075 , \blk00000003/sig00000076 , \blk00000003/sig00000033 , \blk00000003/sig00000032 }),
    .PCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .B({\blk00000003/sig00000044 , \blk00000003/sig00000045 , \blk00000003/sig00000046 , \blk00000003/sig00000047 , \blk00000003/sig00000048 , 
\blk00000003/sig00000049 , \blk00000003/sig0000004a , \blk00000003/sig0000004b , \blk00000003/sig0000004c , \blk00000003/sig0000004d , 
\blk00000003/sig0000004e , \blk00000003/sig0000004f , \blk00000003/sig00000050 , \blk00000003/sig00000051 , \blk00000003/sig00000052 , 
\blk00000003/sig00000053 , \blk00000003/sig00000054 , \blk00000003/sig00000055 }),
    .C({\blk00000003/sig00000077 , \blk00000003/sig00000077 , \blk00000003/sig00000077 , \blk00000003/sig00000077 , \blk00000003/sig00000077 , 
\blk00000003/sig00000077 , \blk00000003/sig00000077 , \blk00000003/sig00000078 , \blk00000003/sig00000079 , \blk00000003/sig0000007a , 
\blk00000003/sig0000007b , \blk00000003/sig0000007c , \blk00000003/sig0000007d , \blk00000003/sig0000007e , \blk00000003/sig0000007f , 
\blk00000003/sig00000080 , \blk00000003/sig00000081 , \blk00000003/sig00000082 , \blk00000003/sig00000083 , \blk00000003/sig00000084 , 
\blk00000003/sig00000085 , \blk00000003/sig00000086 , \blk00000003/sig00000087 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .CARRYINSEL({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .OPMODE({\blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , 
\blk00000003/sig00000032 , \blk00000003/sig00000033 }),
    .BCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ALUMODE({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .PCOUT({\NLW_blk00000003/blk00000007_PCOUT<47>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<45>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<44>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<43>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<41>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<39>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<38>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<37>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<35>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<33>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<32>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<31>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_PCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000007_PCOUT<0>_UNCONNECTED }),
    .P({\NLW_blk00000003/blk00000007_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<42>_UNCONNECTED , sine_2[15], sine_2[14], sine_2[13], sine_2[12], sine_2[11], sine_2[10], sine_2[9], sine_2[8], 
sine_2[7], sine_2[6], sine_2[5], sine_2[4], sine_2[3], sine_2[2], sine_2[1], sine_2[0], \NLW_blk00000003/blk00000007_P<25>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<23>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<20>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<19>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<17>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<15>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<14>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<13>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<12>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<11>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<9>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<8>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<7>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<6>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<5>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<3>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<2>_UNCONNECTED , \NLW_blk00000003/blk00000007_P<1>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003/blk00000007_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ACOUT({\NLW_blk00000003/blk00000007_ACOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_ACOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000007_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000007_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000007_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000007_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000007_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 1 ),
    .BREG ( 1 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 1 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 1 ),
    .MASK ( 48'h3FFFFFFFFFFF ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ))
  \blk00000003/blk00000006  (
    .CARRYIN(\blk00000003/sig00000032 ),
    .CEA1(\blk00000003/sig00000032 ),
    .CEA2(\blk00000003/sig00000033 ),
    .CEB1(\blk00000003/sig00000032 ),
    .CEB2(\blk00000003/sig00000033 ),
    .CEC(\blk00000003/sig00000033 ),
    .CECTRL(\blk00000003/sig00000032 ),
    .CEP(\blk00000003/sig00000033 ),
    .CEM(\blk00000003/sig00000033 ),
    .CECARRYIN(\blk00000003/sig00000033 ),
    .CEMULTCARRYIN(\blk00000003/sig00000032 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000032 ),
    .RSTB(\blk00000003/sig00000032 ),
    .RSTC(\blk00000003/sig00000032 ),
    .RSTCTRL(\blk00000003/sig00000032 ),
    .RSTP(\blk00000003/sig00000032 ),
    .RSTM(\blk00000003/sig00000032 ),
    .RSTALLCARRYIN(\blk00000003/sig00000032 ),
    .CEALUMODE(\blk00000003/sig00000033 ),
    .RSTALUMODE(\blk00000003/sig00000032 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000006_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000006_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000006_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000006_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000032 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000006_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000032 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000006_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , 
\blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , 
\blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000034 , \blk00000003/sig00000035 , \blk00000003/sig00000036 , 
\blk00000003/sig00000037 , \blk00000003/sig00000038 , \blk00000003/sig00000039 , \blk00000003/sig0000003a , \blk00000003/sig0000003b , 
\blk00000003/sig0000003c , \blk00000003/sig0000003d , \blk00000003/sig0000003e , \blk00000003/sig0000003f , \blk00000003/sig00000040 , 
\blk00000003/sig00000041 , \blk00000003/sig00000042 , \blk00000003/sig00000043 , \blk00000003/sig00000033 , \blk00000003/sig00000032 }),
    .PCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .B({\blk00000003/sig00000044 , \blk00000003/sig00000045 , \blk00000003/sig00000046 , \blk00000003/sig00000047 , \blk00000003/sig00000048 , 
\blk00000003/sig00000049 , \blk00000003/sig0000004a , \blk00000003/sig0000004b , \blk00000003/sig0000004c , \blk00000003/sig0000004d , 
\blk00000003/sig0000004e , \blk00000003/sig0000004f , \blk00000003/sig00000050 , \blk00000003/sig00000051 , \blk00000003/sig00000052 , 
\blk00000003/sig00000053 , \blk00000003/sig00000054 , \blk00000003/sig00000055 }),
    .C({\blk00000003/sig00000056 , \blk00000003/sig00000056 , \blk00000003/sig00000056 , \blk00000003/sig00000056 , \blk00000003/sig00000056 , 
\blk00000003/sig00000056 , \blk00000003/sig00000056 , \blk00000003/sig00000057 , \blk00000003/sig00000058 , \blk00000003/sig00000059 , 
\blk00000003/sig0000005a , \blk00000003/sig0000005b , \blk00000003/sig0000005c , \blk00000003/sig0000005d , \blk00000003/sig0000005e , 
\blk00000003/sig0000005f , \blk00000003/sig00000060 , \blk00000003/sig00000061 , \blk00000003/sig00000062 , \blk00000003/sig00000063 , 
\blk00000003/sig00000064 , \blk00000003/sig00000065 , \blk00000003/sig00000066 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .CARRYINSEL({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .OPMODE({\blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , 
\blk00000003/sig00000032 , \blk00000003/sig00000033 }),
    .BCIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ALUMODE({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000033 , \blk00000003/sig00000033 }),
    .PCOUT({\NLW_blk00000003/blk00000006_PCOUT<47>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<45>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<44>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<43>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<41>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<39>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<38>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<37>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<35>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<33>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<32>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<31>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_PCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000006_PCOUT<0>_UNCONNECTED }),
    .P({\NLW_blk00000003/blk00000006_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<42>_UNCONNECTED , cosine_1[15], cosine_1[14], cosine_1[13], cosine_1[12], cosine_1[11], cosine_1[10], cosine_1[9], 
cosine_1[8], cosine_1[7], cosine_1[6], cosine_1[5], cosine_1[4], cosine_1[3], cosine_1[2], cosine_1[1], cosine_1[0], 
\NLW_blk00000003/blk00000006_P<25>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<23>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<22>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<19>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<17>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<16>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<15>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<13>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<12>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<11>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<10>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<9>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<7>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<6>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<5>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<4>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<3>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P<1>_UNCONNECTED , \NLW_blk00000003/blk00000006_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003/blk00000006_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , 
\blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 , \blk00000003/sig00000032 }),
    .ACOUT({\NLW_blk00000003/blk00000006_ACOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000006_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000006_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000006_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000006_CARRYOUT<0>_UNCONNECTED })
  );
  VCC   \blk00000003/blk00000005  (
    .P(\blk00000003/sig00000033 )
  );
  GND   \blk00000003/blk00000004  (
    .G(\blk00000003/sig00000032 )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
